package awt.jaxrs.diagnostics.error;

import java.util.*;

import javax.xml.bind.annotation.*;

import io.swagger.annotations.*;

@ApiModel(value = "Errors", description = "Object representation of a collection of errors.")
@XmlRootElement(name = "errors")
@XmlAccessorType(XmlAccessType.NONE)
public class ErrorMessages {

    @ApiModelProperty(value = "Unique id autogenerated by system that correlates all errors together.", readOnly = true)
    @XmlElement(name = "id")
    private final String logId;

    @ApiModelProperty(value = "List of errors.")
    @XmlElement(name = "error")
    private final Collection<ErrorMessage> errors = new HashSet<>();

    public ErrorMessages(final String logId) {
	this.logId = logId;
    }

    @SuppressWarnings("unused")
    private ErrorMessages() {
	// DO NOT REMOVE! Empty constructor is mandatory for JAXB processing
	this(null);
    }

    public String getLogId() {
	return this.logId;
    }

    public boolean addError(final ErrorMessage error) {
	return this.errors.add(error);
    }

    public Collection<ErrorMessage> getErrors() {
	return this.errors;
    }

    @Override
    public String toString() {
	return "ErrorMessages [logId=" + this.logId + ", errors=" + this.errors + "]";
    }

    public static ErrorMessages fromException(final String logId, final Throwable throwable) {
	final ErrorMessages errors = new ErrorMessages(logId);
	errors.addError(new ErrorMessage(throwable.getMessage()));

	return errors;
    }
}
